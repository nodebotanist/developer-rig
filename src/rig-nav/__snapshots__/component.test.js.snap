// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RigNav /> renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RigNav
    bitsEnabled={true}
    configHandler={[Function]}
    error=""
    liveConfigHandler={[Function]}
    login={Object {}}
    loginHandler={[Function]}
    openConfigurationsHandler={[Function]}
    openProductManagementHandler={[Function]}
    selectedView="Extension Views"
    viewerHandler={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <a
          className="top-nav-item top-nav-item__selected"
          onClick={[Function]}
>
          Extension Views
</a>,
        <a
          className="top-nav-item"
          onClick={[Function]}
>
          Broadcaster Config
</a>,
        <a
          className="top-nav-item"
          onClick={[Function]}
>
          Live Config
</a>,
        <a
          className="top-nav-item"
          onClick={[Function]}
>
          Configurations
</a>,
        <a
          className="top-nav-item"
          onClick={[Function]}
>
          Manage Products
</a>,
        <LoginButton
          loginHandler={[Function]}
/>,
      ],
      "className": "top-nav",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Extension Views",
          "className": "top-nav-item top-nav-item__selected",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Extension Views",
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Broadcaster Config",
          "className": "top-nav-item",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Broadcaster Config",
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Live Config",
          "className": "top-nav-item",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Live Config",
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Configurations",
          "className": "top-nav-item",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Configurations",
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Manage Products",
          "className": "top-nav-item",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Manage Products",
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "loginHandler": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <a
            className="top-nav-item top-nav-item__selected"
            onClick={[Function]}
>
            Extension Views
</a>,
          <a
            className="top-nav-item"
            onClick={[Function]}
>
            Broadcaster Config
</a>,
          <a
            className="top-nav-item"
            onClick={[Function]}
>
            Live Config
</a>,
          <a
            className="top-nav-item"
            onClick={[Function]}
>
            Configurations
</a>,
          <a
            className="top-nav-item"
            onClick={[Function]}
>
            Manage Products
</a>,
          <LoginButton
            loginHandler={[Function]}
/>,
        ],
        "className": "top-nav",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Extension Views",
            "className": "top-nav-item top-nav-item__selected",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Extension Views",
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Broadcaster Config",
            "className": "top-nav-item",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Broadcaster Config",
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Live Config",
            "className": "top-nav-item",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Live Config",
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Configurations",
            "className": "top-nav-item",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Configurations",
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Manage Products",
            "className": "top-nav-item",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Manage Products",
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "loginHandler": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
